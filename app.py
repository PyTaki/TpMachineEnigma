import sys
import time
from PyQt5 import QtGui
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QAbstractSpinBox
)

from main_ui import Ui_enigma_board


class Window(QMainWindow, Ui_enigma_board):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)
        self.disableConfigs()
        # self.changeLetterColor("b","blue")
        # self.a.setStyleSheet("color: blue ")
        #--------------------
        self.configurerButton.clicked.connect(self.configurer_button_clicked)
        self.encrypterButton.clicked.connect(self.encypter_button_clicked)
        self.decrypterButton.clicked.connect(self.decrypter_button_clicked)
        self.suivantButton.clicked.connect(self.suivant_button_clicked)
        #--------------------

    def disableConfigs(self):
        for i in range(1, 27, 1):
            getattr(self, "ref_box_"+str(i)).setReadOnly(True)
            getattr(self, "ref_box_" + str(i)).setButtonSymbols(QAbstractSpinBox.NoButtons)
            for j in range(1, 4, 1):
                for k in range(1, 3, 1):
                    getattr(self, "r" + str(j) + "_l" + str(k) + "_box_" + str(i)).setReadOnly(True)
                    getattr(self, "r" + str(j) + "_l" + str(k) + "_box_" + str(i)).setButtonSymbols(QAbstractSpinBox.NoButtons)

    def enableConfigs(self):
        for i in range(1, 27, 1):
            getattr(self, "ref_box_" + str(i)).setReadOnly(False)
            getattr(self, "ref_box_" + str(i)).setButtonSymbols(QAbstractSpinBox.UpDownArrows)
            for j in range(1,4, 1):
                for k in range(1, 3, 1):
                    getattr(self, "r"+str(j)+"_l"+str(k)+"_box_"+str(i)).setReadOnly(False)
                    getattr(self, "r"+str(j)+"_l"+str(k)+"_box_"+str(i)).setButtonSymbols(QAbstractSpinBox.UpDownArrows)

    def configurer_button_clicked(self):
        if(self.configurerButton.text() == "Configurer Rotors"):
            self.enableConfigs()
            self.configurerButton.setText("Confirmer")
        elif(self.configurerButton.text() == "Confirmer"):
            self.disableConfigs()
            self.configurerButton.setText("Configurer Rotors")

    def encypter_button_clicked(self):
        msg = self.encryptTextEdit.toPlainText()
        self.decryptTextEdit.setText(msg)
        self.decryptTextEdit.setAlignment(Qt.AlignCenter)

    def suivant_button_clicked(self):
        msg = self.encryptTextEdit.toPlainText()
        for c in msg:
            self.changeLetterColor(c, "red")

    def decrypter_button_clicked(self):
        pass

    def changeLetterColor(self, letter, color):
        getattr(self, letter).setAutoFillBackground(True)  # This is important!!
        # getattr(self,letter).setStyleSheet("QLabel { background-color: "+color+" }")
        getattr(self, letter).setStyleSheet("QLabel { color: "+color+" }")

app = QApplication(sys.argv)
win = Window()
win.show()
sys.exit(app.exec())

# this commande is for compiling the .ui file generated by the qt designer studio: pyuic5 -o main_ui.py ui/qt.ui when
# we finish the app, we can convert it to executable file using this commande: pyinstaller --onefile --windowed
# -i"C:\Users\Taki\Desktop\Code\Python\enigma\TP\ui\resources\enigma.ico"
# "C:\Users\Taki\Desktop\Code\Python\enigma\TP\app.py"
